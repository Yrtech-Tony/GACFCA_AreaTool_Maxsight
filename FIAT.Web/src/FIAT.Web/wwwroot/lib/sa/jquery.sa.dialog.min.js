-(function ($) { var modaldialog = {}; var alertWidth = 525; if ($(document).width() < 500) { alertWidth = 300 } else { alertWidth = 525 } function showDialog(content, options) { options["title"] = "提示信息"; if (options.type == "success") { var settings = $.extend({ title: modaldialog.DialogTitles[options.type] }, modaldialog.defaultsForAlert, options) } else { var settings = $.extend({ title: modaldialog.DialogTitles[options.type] }, modaldialog.defaults, options) } var $dialog = $("<div></div>"); var dialoghtml = "<div class='modal-header' style='margin:1px'>" + "<button type='button' class='close'><span aria-hidden='true'>&times;</span><span class='sr-only'>" + "关闭" + "</span></button>" + "<h4 class='modal-title'></h4>" + "</div>" + "<div class='modal-body' style='max-height:500px; overflow:auto'></div>" + "<div class='modal-footer'>"; dialoghtml += "<input type='button' value='" + "确定" + "' class='btn btn-default btn-dialog-ok'>"; dialoghtml += "<input type='button' value='" + "关闭" + "' class='btn btn-default btn-dialog-close'>"; dialoghtml += "<input type='button' value='" + "取消" + "' class='btn btn-default btn-dialog-cancel'>"; dialoghtml += "</div>"; $dialog.html(dialoghtml); var $dialogmask = $("<div></div>"); $dialogmask.hide(); $dialog.hide(); $dialogmask.addClass("dialog-mask"); $dialog.addClass("dialog"); if (settings.popIndex != undefined) { $dialog.addClass(settings.popIndex) } $dialog.close = function () { modaldialog.close(this, $(".dialog-mask")) }; $("body").append($dialogmask); $("body").append($dialog); var $dlh = $dialog.find(".modal-header"); var $dlt = $dialog.find(".modal-title"); var $dlx = $dialog.find(".close"); var $dlc = $dialog.find(".modal-body"); var $dlf = $dialog.find(".modal-footer"); var $dlbclose = $dialog.find(".btn-dialog-close"); var $dlbok = $dialog.find(".btn-dialog-ok"); var $dlbcancel = $dialog.find(".btn-dialog-cancel"); $dlx.on("click", function () { modaldialog.close($dialog, $dialogmask); if (typeof (settings.fnClose) != "undefined") { settings.fnClose() } }); $dlbclose.on("click", function () { modaldialog.close($dialog, $dialogmask); if (typeof (settings.fnClose) != "undefined") { settings.fnClose() } }); $dlbok.on("click", function () { if (typeof (settings.fnOk) != "undefined") { settings.fnOk() } }); $dlbcancel.on("click", function () { modaldialog.close($dialog, $dialogmask); if (typeof (settings.fnCancel) != "undefined") { settings.fnCancel() } }); $dlt.append(settings.title); $dlc.append(content); if (settings.maxWidth && $(window).width() > parseInt(settings.maxWidth)) { $dialog.css("width", settings.maxWidth) } else { if (settings.minWidth && $(window).width() < parseInt(settings.minWidth)) { $dialog.css("width", settings.minWidth) } else { if (settings.minWidth) { $dialog.css("width", settings.minWidth) } else { $dialog.css("width", settings.width) } } } if (settings.position == modaldialog.Positions[4]) { var dialogTop = Math.abs($(window).height() - $dialog.height()) / 2; $dialog.css("left", ($(window).width() - $dialog.width()) / 2); $dialog.css("top", (dialogTop >= 25) ? dialogTop : 25) } else { $dialog.addClass(settings.position) } switch (settings.type) { case ("error"): $dlh.addClass("alert-danger"); break; case ("warning"): $dlh.addClass("alert-warning"); break; case ("success"): $dlh.addClass("alert-success"); break; case ("confirm"): $dlh.addClass("alert-info"); break } if (settings.type == "confirm") { $dlbclose.hide(); $dlbok.show(); $dlbcancel.show() } else { $dlbclose.show(); $dlbok.hide(); $dlbcancel.hide() } if (settings.showClose) { $dlx.show() } if (settings.showCloseBtn) { $dlbclose.show() } if (settings.showOKBtn) { $dlbok.show() } if (settings.showCancelBtn) { $dlbcancel.show() } if (settings.type != "success") { $dialog.dialogMove(); $("body").css("overflow", "hidden") } $dialog.fadeIn("slow"); if (settings.isModal) { $dialogmask.fadeIn("normal") } if (settings.timeout) { $dialog.fadeOut((settings.timeout * 1000), function () { removeDialog($dialog, $dialogmask) }); $dialogmask.fadeOut((settings.timeout * 1000)) } return $dialog } function showPop(url, options) { var settings = $.extend({ title: modaldialog.DialogTitles[options.type] }, options); var $dialog = $('<div tabindex="0"><a style="display:none;">hide</a></div>'); var dh = ""; if (_WAPYN) { dh = "<div class='modal-header'>" + "<button type='button' class='close'><span aria-hidden='true'>&times;</span><span class='sr-only'>" + "Close" + "</span></button>" + "<h4 class='modal-title'></h4>" + "</div>" + "<div class='modal-body demo-iframe-holder' style='padding:0px;padding-bottom:10px'>" + "<iframe frameborder=0 height=100% width=100% scrolling='auto'>这是个iframe</iframe>" + "</div>" } else { dh = "<div class='modal-header'>" + "<button type='button' class='close'><span aria-hidden='true'>&times;</span><span class='sr-only'>" + "Close" + "</span></button>" + "<h4 class='modal-title'></h4>" + "</div>" + "<div class='modal-body' style='padding:0px;padding-bottom:10px'>" + "<iframe frameborder=0 height=100% width=100% scrolling='auto'>这是个iframe</iframe>" + "</div>" } $dialog.html(dh); var $dialogmask = $('<div tabindex="0"><a style="display:none;">hide</a></div>'); var $dl = $dialog; var $dlh = $dl.find(".modal-header"); var $dlt = $dl.find(".modal-title"); var $dlx = $dl.find(".close"); var $dlc = $dl.find(".modal-body"); var $dliframe = $dl.find("iframe"); $dialogmask.hide(); $dialog.hide(); $("body").bind("keydown", function () { if (event.keyCode == 27) { $dialog.close() } }); $dlt.append(settings.title); if (settings.IsHtml) { $dliframe.remove(); var $ct = $('<div style="height:100%;overflow:auto"></div>'); $ct.html(url); $dlc.html($ct) } else { var urlParas = ""; if (options.params != undefined) { $.each(options.params, function (i) { urlParas += (i + "=" + encodeURI(options.params[i]) + "&") }); urlParas = urlParas.substr(0, urlParas.length - 1) } $dliframe.attr("src", url + "?" + urlParas) } $dialogmask.addClass("dialog-mask"); $dialog.addClass("dialog"); if (settings.popIndex != undefined) { $dialog.addClass(settings.popIndex) } $dialog.close = function () { $("body").unbind("keydown"); modaldialog.close(this, $(".dialog-mask")) }; window.popcallback = function (data) { options.popcallback(data); modaldialog.close($dialog, $(".dialog-mask")) }; $("body").append($dialogmask); $("body").append($dialog); $dlx.on("click", function () { modaldialog.close($dl, $dialogmask) }); if (typeof (settings.height) != "undefined") { $dlc.css("height", settings.height) } else { if (settings.maxHeight && $(window).height() > parseInt(settings.maxHeight)) { $dlc.css("height", settings.maxHeight) } else { if (settings.minHeight && $(window).height() < parseInt(settings.minHeight)) { $dlc.css("height", settings.minHeight) } else { if ($(window).height() < 500) { $dlc.css("height", $(window).height() * 0.8 - Math.abs($dlh.height())) } else { $dlc.css("height", 500) } } } } if (typeof (settings.width) != "undefined") { $dl.css("width", settings.width) } else { if ($(window).width() > 600) { if (settings.maxWidth && $(window).width() > parseInt(settings.maxWidth)) { $dl.css("width", settings.maxWidth) } else { if (settings.minWidth && $(window).width() < parseInt(settings.minWidth)) { $dl.css("width", settings.minWidth) } else { $dl.css("width", $(window).width() - 200) } } } else { if (settings.maxWidth && $(window).width() > parseInt(settings.maxWidth)) { $dl.css("width", settings.maxWidth) } else { if (settings.minWidth && $(window).width() < parseInt(settings.minWidth)) { $dl.css("width", settings.minWidth) } else { $dl.css("width", $(window).width() - 20) } } } } var dialogTop = Math.abs($(window).height() - $dl.height()) / 2; $dl.css("left", ($(window).width() - $dl.width()) / 2); $dl.css("top", (dialogTop >= 25) ? dialogTop : 25); $dl.dialogMove(); $dl.fadeIn("slow"); $dialogmask.fadeIn("normal"); return $dialog } modaldialog.error = function $$modaldialog$error(content, options) { if (typeof (options) == "undefined") { options = {} } options["type"] = "error"; options["title"] = "DialogTitle"; return (showDialog(content, options)) }; modaldialog.warning = function $$modaldialog$error(content, options) { if (typeof (options) == "undefined") { options = { title: "DialogTitle" } } options["type"] = "warning"; options["title"] = "DialogTitle"; return (showDialog(content, options)) }; modaldialog.success = function $$modaldialog$error(content, options) { if (typeof (options) == "undefined") { options = { title: "DialogTitle" } } options["type"] = "success"; options["title"] = "DialogTitle"; return (showDialog(content, options)) }; modaldialog.confirm = function $$modaldialog$error(content, options) { if (typeof (options) == "undefined") { options = { title: "DialogTitle" } } options["type"] = "confirm"; options["title"] = "DialogTitle"; return (showDialog(content, options)) }; modaldialog.close = function closeDialog(dialog, dialogmask) { dialog.stop(); dialogmask.stop(); dialog.fadeOut("slow", function () { removeDialog(dialog, dialogmask) }); dialogmask.fadeOut("normal") }; function removeDialog(dl, dm) { var $dliframe = dl.find("iframe"); if ($dliframe != "undefined") { $dliframe.attr("src", ""); $dliframe.remove() } document.body.removeChild(dl[0]); document.body.removeChild(dm[0]); $("body").css("overflow", "visible") } modaldialog.pop = function $$modaldialog$pop(url, options) { if (typeof (options) == "undefined") { options = {} } options["type"] = "pop"; return (showPop(url, options)) }; modaldialog.DialogTypes = new Array("error", "warning", "success", "confirm"); modaldialog.DialogTitles = { "error": "!! Error !!", "warning": "Warning!", "success": "Success", "confirm": "Please Choose", "pop": "PopView" }; modaldialog.Positions = new Array("ltop", "rtop", "lbottom", "rbottom", "center"); modaldialog.defaults = { timeout: 0, showClose: false, showOKBtn: false, showCancelBtn: false, showCloseBtn: false, width: alertWidth, isModal: true, position: "center" }; modaldialog.defaultsForAlert = { timeout: 3, showClose: true, width: alertWidth, isModal: false, position: "rbottom" }; $.extend({ modaldialog: modaldialog }) })(jQuery); (function ($) { $.fn.dialogMove = function () { var moveObj = $(this); var old_position = {}; var new_position = {}; var offset = {}; var isDown = false; var topOffSet = 0; var dlh = moveObj.find(".modal-header"); dlh.css("cursor", "move"); dlh.mousedown(function (e) { old_position = { X: e.clientX, Y: e.clientY }; offset = moveObj.offset(); topOffSet = offset.top - parseInt(moveObj.css("top")); isDown = true; moveObj.css({ position: "absolute", top: offset.top }) }); dlh.mouseup(function (e) { isDown = false; moveObj.css({ position: "fixed", top: parseInt(moveObj.css("top")) - topOffSet }) }); $("body").mousemove(function (e) { if (isDown) { new_position = { X: e.clientX, Y: e.clientY }; moveObj.css({ left: offset.left + new_position.X - old_position.X, top: offset.top + new_position.Y - old_position.Y }) } }) } })(jQuery); (function ($) { $.sa.error = function $$sa$error(content, options) { return $.modaldialog.error(content, options) }; $.sa.warning = function $$sa$error(content, options) { return $.modaldialog.warning(content, options) }; $.sa.alert = function $$sa$error(content, options) { return $.modaldialog.success(content, options) }; $.sa.confirm = function $$sa$error(content, options) { return $.modaldialog.confirm(content, options) }; $.sa.pop = function $$sa$error(url, options) { return $.modaldialog.pop(url, options) }; $.sa.upload = function $$sa$error(options) { var options = $.extend({ title: "FileUpload", maxWidth: 800, minWidth: 350 }, options); return $.sa.pop("/File/WebUpload", options) }; $.sa.dataupload = function $$sa$error(options) { var options = $.extend({ title: "DataUpload", maxWidth: 800, minWidth: 350 }, options); return $.sa.pop("/DataUpload/DataUpload", options) } })(jQuery);